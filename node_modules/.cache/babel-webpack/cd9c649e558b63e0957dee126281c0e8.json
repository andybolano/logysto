{"ast":null,"code":"import { environment } from '@env';\nimport { of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/google-maps\";\n\nfunction MapComponent_div_1_map_marker_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"map-marker\", 4);\n  }\n\n  if (rf & 2) {\n    const marker_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵpropertyInterpolate(\"label\", i_r3 + 1);\n    i0.ɵɵproperty(\"position\", marker_r2)(\"options\", ctx_r1.markerOptions);\n  }\n}\n\nfunction MapComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"google-map\", 2);\n    i0.ɵɵtemplate(2, MapComponent_div_1_map_marker_2_Template, 1, 3, \"map-marker\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"center\", ctx_r0.center)(\"zoom\", ctx_r0.zoom);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.markerPositions);\n  }\n}\n\nexport class MapComponent {\n  constructor(httpClient) {\n    this.zoom = 13;\n    this.markerPositions = [];\n    this.markerOptions = {\n      draggable: false\n    };\n    this.apiLoaded = httpClient.jsonp(`${environment.urlGoogleMap}${environment.apiKey}`, 'callback').pipe(map(() => true), catchError(() => of(false)));\n  }\n\n  ngOnInit() {\n    this.setCenterPosition(this.locations[0]);\n    this.loadLocations();\n  }\n\n  loadLocations() {\n    this.locations.forEach(location => {\n      this.markerPositions.push({\n        lat: location.lat,\n        lng: location.lon\n      });\n    });\n  }\n\n  setCenterPosition(location) {\n    this.center = {\n      lat: location.lat,\n      lng: location.lon\n    };\n  }\n\n}\n\nMapComponent.ɵfac = function MapComponent_Factory(t) {\n  return new (t || MapComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\n\nMapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MapComponent,\n  selectors: [[\"app-map\"]],\n  inputs: {\n    locations: \"locations\"\n  },\n  decls: 3,\n  vars: 3,\n  consts: [[1, \"map-container\"], [4, \"ngIf\"], [\"height\", \"25rem\", \"width\", \"100%\", 3, \"center\", \"zoom\"], [3, \"position\", \"label\", \"options\", 4, \"ngFor\", \"ngForOf\"], [3, \"position\", \"label\", \"options\"]],\n  template: function MapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, MapComponent_div_1_Template, 3, 3, \"div\", 1);\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 1, ctx.apiLoaded));\n    }\n  },\n  directives: [i2.NgIf, i3.GoogleMap, i2.NgForOf, i3.MapMarker],\n  pipes: [i2.AsyncPipe],\n  styles: [\".map-container[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 25rem;\\n  background-color: var(--lgy-gray-500);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7RUFDQSxhQUFBO0VBQ0EscUNBQUE7QUFDRiIsImZpbGUiOiJtYXAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFwLWNvbnRhaW5lcntcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDI1cmVtO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWxneS1ncmF5LTUwMCk7XHJcbn1cclxuIl19 */\"]\n});","map":{"version":3,"sources":["D:\\Users\\andy.bolano\\Documents\\logysto\\src\\app\\shared\\components\\map\\map.component.ts","D:\\Users\\andy.bolano\\Documents\\logysto\\src\\app\\shared\\components\\map\\map.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Location } from '@shared/types/interfaces/location.interface';\nimport { environment } from '@env';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements OnInit {\n\n\n  @Input() public locations: Location[];\n  public apiLoaded: Observable<boolean>;\n  public center: google.maps.LatLngLiteral;\n  public zoom:number = 13;\n  public markerPositions: google.maps.LatLngLiteral[] = [];\n  public markerOptions: google.maps.MarkerOptions = {draggable: false};\n\n  constructor(\n    httpClient: HttpClient\n    ) {\n    this.apiLoaded = httpClient.jsonp(`${environment.urlGoogleMap}${environment.apiKey}`, 'callback')\n        .pipe(\n          map(() => true),\n          catchError(() => of(false))\n        );\n  }\n\n  ngOnInit(): void {\n     this.setCenterPosition(this.locations[0]);\n      this.loadLocations();\n  }\n\n  private loadLocations(): void{\n\n  this.locations.forEach((location:Location)=>{\n    this.markerPositions.push({\n      lat: location.lat,\n      lng: location.lon\n    });\n  })\n  }\n\n  private setCenterPosition(location:Location): void{\n    this.center = {\n      lat: location.lat,\n      lng: location.lon\n    };\n  }\n\n}\n","<div class=\"map-container\">\n  <div *ngIf=\"apiLoaded | async\">\n    <google-map\n    height=\"25rem\"\n    width=\"100%\"\n    [center]=\"center\"\n    [zoom]=\"zoom\">\n\n    <map-marker\n    *ngFor=\"let marker of markerPositions; let i = index\"\n    [position]=\"marker\"\n    label=\"{{i + 1}}\"\n\n    [options]=\"markerOptions\">\n\n  </map-marker>\n\n    </google-map>\n  </div>\n</div>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}